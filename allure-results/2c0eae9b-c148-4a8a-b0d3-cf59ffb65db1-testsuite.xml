<?xml version='1.0'?>
<ns2:test-suite xmlns:ns2='urn:model.allure.qatools.yandex.ru' start='1584443956032' stop='1584443956087'>
    <name>Transfer Service</name>
    <title>Transfer Service</title>
    <test-cases>
        <test-case start='1584443956032' status='failed' stop='1584443956033'>
            <name>Should fail</name>
            <title>Should fail</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
            <failure>
                <message>TypeError: Cannot read property 'name' of undefined</message>
                <stack-trace>TypeError: Cannot read property 'name' of undefined
                    at Object.&lt;anonymous> (/Users/yonigoldberg/Solutions/testing-workshop/clean-testing/src/test/transfer-service-test-start.js:28:91)
                    at Object.asyncJestTest (/Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:100:37)
                    at /Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/queueRunner.js:43:12
                    at new Promise (&lt;anonymous>)
                    at mapper (/Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/queueRunner.js:26:19)
                    at /Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/queueRunner.js:73:41</stack-trace>
            </failure>
        </test-case>
        <test-case start='1584443956034' status='passed' stop='1584443956039'>
            <name>Should throw exception</name>
            <title>Should throw exception</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
        <test-case start='1584443956039' status='passed' stop='1584443956041'>
            <name>When user is deleted, should not approve the transfer</name>
            <title>When user is deleted, should not approve the transfer</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
        <test-case start='1584443956041' status='passed' stop='1584443956043'>
            <name>When user has no credit, should not approve the transfer</name>
            <title>When user has no credit, should not approve the transfer</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
        <test-case start='1584443956043' status='passed' stop='1584443956046'>
            <name>When receiver lives in forbidden country, should not approve the transfer</name>
            <title>When receiver lives in forbidden country, should not approve the transfer</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
        <test-case start='1584443956046' status='failed' stop='1584443956049'>
            <name>When no sender specified, should throw invalid details error</name>
            <title>When no sender specified, should throw invalid details error</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
            <failure>
                <message>Error: expect(received).toBe(expected) // Object.is equality
                
                Expected: false
                Received: true</message>
                <stack-trace>Error: expect(received).toBe(expected) // Object.is equality
                
                Expected: false
                Received: true
                    at Object.&lt;anonymous> (/Users/yonigoldberg/Solutions/testing-workshop/clean-testing/src/test/transfer-service-test-start.js:81:18)
                    at Object.asyncJestTest (/Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:100:37)
                    at /Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/queueRunner.js:43:12
                    at new Promise (&lt;anonymous>)
                    at mapper (/Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/queueRunner.js:26:19)
                    at /Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/queueRunner.js:73:41</stack-trace>
            </failure>
        </test-case>
        <test-case start='1584443956049' status='failed' stop='1584443956054'>
            <name>When no receiver specified, should throw invalid details error</name>
            <title>When no receiver specified, should throw invalid details error</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
            <failure>
                <message>Error: expect(received).toBe(expected) // Object.is equality
                
                Expected: false
                Received: true</message>
                <stack-trace>Error: expect(received).toBe(expected) // Object.is equality
                
                Expected: false
                Received: true
                    at Object.&lt;anonymous> (/Users/yonigoldberg/Solutions/testing-workshop/clean-testing/src/test/transfer-service-test-start.js:86:18)
                    at Object.asyncJestTest (/Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:100:37)
                    at /Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/queueRunner.js:43:12
                    at new Promise (&lt;anonymous>)
                    at mapper (/Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/queueRunner.js:26:19)
                    at /Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/queueRunner.js:73:41</stack-trace>
            </failure>
        </test-case>
        <test-case start='1584443956054' status='passed' stop='1584443956056'>
            <name>When no bank specified, should throw invalid details error</name>
            <title>When no bank specified, should throw invalid details error</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
        <test-case start='1584443956056' status='passed' stop='1584443956058'>
            <name>When user did not confirm his account, should not approve the transfer</name>
            <title>When user did not confirm his account, should not approve the transfer</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
        <test-case start='1584443956058' status='passed' stop='1584443956061'>
            <name>When user has enough credit, should approve the transfer</name>
            <title>When user has enough credit, should approve the transfer</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
        <test-case start='1584443956061' status='passed' stop='1584443956063'>
            <name>When transfer is successful, should send mail to receiver</name>
            <title>When transfer is successful, should send mail to receiver</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
        <test-case start='1584443956063' status='passed' stop='1584443956065'>
            <name>When transfer is successful, receiver balance should get topped up</name>
            <title>When transfer is successful, receiver balance should get topped up</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
        <test-case start='1584443956065' status='failed' stop='1584443956068'>
            <name>When no amount specified, should throw invalid details error</name>
            <title>When no amount specified, should throw invalid details error</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
            <failure>
                <message>Error: expect(received).toBe(expected) // Object.is equality
                
                Expected: false
                Received: true</message>
                <stack-trace>Error: expect(received).toBe(expected) // Object.is equality
                
                Expected: false
                Received: true
                    at Object.&lt;anonymous> (/Users/yonigoldberg/Solutions/testing-workshop/clean-testing/src/test/transfer-service-test-start.js:117:18)
                    at Object.asyncJestTest (/Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:100:37)
                    at /Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/queueRunner.js:43:12
                    at new Promise (&lt;anonymous>)
                    at mapper (/Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/queueRunner.js:26:19)
                    at /Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/queueRunner.js:73:41</stack-trace>
            </failure>
        </test-case>
        <test-case start='1584443956068' status='failed' stop='1584443956070'>
            <name>When sender is from NaN and transfer is valid, then should be approved</name>
            <title>When sender is from NaN and transfer is valid, then should be approved</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
            <failure>
                <message>TypeError: this.bankProvider.transfer is not a function</message>
                <stack-trace>TypeError: this.bankProvider.transfer is not a function
                    at TransferService.transfer (/Users/yonigoldberg/Solutions/testing-workshop/clean-testing/src/transfer-service.js:33:23)
                    at /Users/yonigoldberg/Solutions/testing-workshop/clean-testing/src/test/transfer-service-test-start.js:132:46
                    at Object.&lt;anonymous> (/Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-each/build/bind.js:76:13)
                    at Object.asyncJestTest (/Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:100:37)
                    at /Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/queueRunner.js:43:12
                    at new Promise (&lt;anonymous>)
                    at mapper (/Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/queueRunner.js:26:19)
                    at /Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/queueRunner.js:73:41</stack-trace>
            </failure>
        </test-case>
        <test-case start='1584443956070' status='failed' stop='1584443956071'>
            <name>When sender is from NaN and transfer is valid, then should be approved</name>
            <title>When sender is from NaN and transfer is valid, then should be approved</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
            <failure>
                <message>TypeError: this.bankProvider.transfer is not a function</message>
                <stack-trace>TypeError: this.bankProvider.transfer is not a function
                    at TransferService.transfer (/Users/yonigoldberg/Solutions/testing-workshop/clean-testing/src/transfer-service.js:33:23)
                    at /Users/yonigoldberg/Solutions/testing-workshop/clean-testing/src/test/transfer-service-test-start.js:132:46
                    at Object.&lt;anonymous> (/Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-each/build/bind.js:76:13)
                    at Object.asyncJestTest (/Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:100:37)
                    at /Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/queueRunner.js:43:12
                    at new Promise (&lt;anonymous>)
                    at mapper (/Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/queueRunner.js:26:19)
                    at /Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/queueRunner.js:73:41</stack-trace>
            </failure>
        </test-case>
        <test-case start='1584443956071' status='failed' stop='1584443956071'>
            <name>When sender is from NaN and transfer is valid, then should be approved</name>
            <title>When sender is from NaN and transfer is valid, then should be approved</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
            <failure>
                <message>TypeError: this.bankProvider.transfer is not a function</message>
                <stack-trace>TypeError: this.bankProvider.transfer is not a function
                    at TransferService.transfer (/Users/yonigoldberg/Solutions/testing-workshop/clean-testing/src/transfer-service.js:33:23)
                    at /Users/yonigoldberg/Solutions/testing-workshop/clean-testing/src/test/transfer-service-test-start.js:132:46
                    at Object.&lt;anonymous> (/Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-each/build/bind.js:76:13)
                    at Object.asyncJestTest (/Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:100:37)
                    at /Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/queueRunner.js:43:12
                    at new Promise (&lt;anonymous>)
                    at mapper (/Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/queueRunner.js:26:19)
                    at /Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/queueRunner.js:73:41</stack-trace>
            </failure>
        </test-case>
        <test-case start='1584443956071' status='failed' stop='1584443956071'>
            <name>When sender is from NaN and transfer is valid, then should be approved</name>
            <title>When sender is from NaN and transfer is valid, then should be approved</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
            <failure>
                <message>TypeError: this.bankProvider.transfer is not a function</message>
                <stack-trace>TypeError: this.bankProvider.transfer is not a function
                    at TransferService.transfer (/Users/yonigoldberg/Solutions/testing-workshop/clean-testing/src/transfer-service.js:33:23)
                    at /Users/yonigoldberg/Solutions/testing-workshop/clean-testing/src/test/transfer-service-test-start.js:132:46
                    at Object.&lt;anonymous> (/Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-each/build/bind.js:76:13)
                    at Object.asyncJestTest (/Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:100:37)
                    at /Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/queueRunner.js:43:12
                    at new Promise (&lt;anonymous>)
                    at mapper (/Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/queueRunner.js:26:19)
                    at /Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/queueRunner.js:73:41</stack-trace>
            </failure>
        </test-case>
        <test-case start='1584443956071' status='failed' stop='1584443956072'>
            <name>When sender is from NaN and transfer is valid, then should be approved</name>
            <title>When sender is from NaN and transfer is valid, then should be approved</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
            <failure>
                <message>TypeError: this.bankProvider.transfer is not a function</message>
                <stack-trace>TypeError: this.bankProvider.transfer is not a function
                    at TransferService.transfer (/Users/yonigoldberg/Solutions/testing-workshop/clean-testing/src/transfer-service.js:33:23)
                    at /Users/yonigoldberg/Solutions/testing-workshop/clean-testing/src/test/transfer-service-test-start.js:132:46
                    at Object.&lt;anonymous> (/Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-each/build/bind.js:76:13)
                    at Object.asyncJestTest (/Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:100:37)
                    at /Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/queueRunner.js:43:12
                    at new Promise (&lt;anonymous>)
                    at mapper (/Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/queueRunner.js:26:19)
                    at /Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/queueRunner.js:73:41</stack-trace>
            </failure>
        </test-case>
        <test-case start='1584443956072' status='failed' stop='1584443956072'>
            <name>When sender is from NaN and transfer is valid, then should be approved</name>
            <title>When sender is from NaN and transfer is valid, then should be approved</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
            <failure>
                <message>TypeError: this.bankProvider.transfer is not a function</message>
                <stack-trace>TypeError: this.bankProvider.transfer is not a function
                    at TransferService.transfer (/Users/yonigoldberg/Solutions/testing-workshop/clean-testing/src/transfer-service.js:33:23)
                    at /Users/yonigoldberg/Solutions/testing-workshop/clean-testing/src/test/transfer-service-test-start.js:132:46
                    at Object.&lt;anonymous> (/Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-each/build/bind.js:76:13)
                    at Object.asyncJestTest (/Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:100:37)
                    at /Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/queueRunner.js:43:12
                    at new Promise (&lt;anonymous>)
                    at mapper (/Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/queueRunner.js:26:19)
                    at /Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/queueRunner.js:73:41</stack-trace>
            </failure>
        </test-case>
        <test-case start='1584443956072' status='passed' stop='1584443956074'>
            <name>When transfer is with different currency, receiver gets using his own currency</name>
            <title>When transfer is with different currency, receiver gets using his own currency</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
        <test-case start='1584443956074' status='passed' stop='1584443956076'>
            <name>When sender from Italy sends a valid payment, transfer is approved</name>
            <title>When sender from Italy sends a valid payment, transfer is approved</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
        <test-case start='1584443956076' status='passed' stop='1584443956078'>
            <name>When sender from India sends a valid payment, transfer is approved</name>
            <title>When sender from India sends a valid payment, transfer is approved</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
        <test-case start='1584443956078' status='passed' stop='1584443956081'>
            <name>When sender from US sends a valid payment, transfer is approved</name>
            <title>When sender from US sends a valid payment, transfer is approved</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
        <test-case start='1584443956081' status='passed' stop='1584443956083'>
            <name>When sender from Germany sends a valid payment, transfer is approved</name>
            <title>When sender from Germany sends a valid payment, transfer is approved</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
        <test-case start='1584443956083' status='passed' stop='1584443956087'>
            <name>When sender from Argentina sends a valid payment, transfer is approved</name>
            <title>When sender from Argentina sends a valid payment, transfer is approved</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
        <test-case start='1584443956087' status='pending' stop='1584443956087'>
            <name>When trying to exceed credit, transfer doesnt appear in user history</name>
            <title>When trying to exceed credit, transfer doesnt appear in user history</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
            <failure>
                <message>Temporarily disabled with xit</message>
                <stack-trace>undefined</stack-trace>
            </failure>
        </test-case>
    </test-cases>
</ns2:test-suite>