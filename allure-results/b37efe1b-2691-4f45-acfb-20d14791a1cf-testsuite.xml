<?xml version='1.0'?>
<ns2:test-suite xmlns:ns2='urn:model.allure.qatools.yandex.ru' start='1584808033948' stop='1584808034041'>
    <name>Transfer Service</name>
    <title>Transfer Service</title>
    <test-cases>
        <test-case start='1584808033949' status='failed' stop='1584808033973'>
            <name>Should fail</name>
            <title>Should fail</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
            <failure>
                <message>Error: expect(received).toBe(expected) // Object.is equality
                
                Expected: false
                Received: true</message>
                <stack-trace>Error: expect(received).toBe(expected) // Object.is equality
                
                Expected: false
                Received: true
                    at Object.&lt;anonymous> (/Users/yonigoldberg/Solutions/testing-workshop/clean-testing/src/test/transfer-service-test-start.js:42:27)
                    at Object.asyncJestTest (/Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:100:37)
                    at /Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/queueRunner.js:43:12
                    at new Promise (&lt;anonymous>)
                    at mapper (/Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/queueRunner.js:26:19)
                    at /Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/queueRunner.js:73:41
                    at processTicksAndRejections (internal/process/task_queues.js:93:5)</stack-trace>
            </failure>
        </test-case>
        <test-case start='1584808033974' status='failed' stop='1584808033982'>
            <name>Should throw exception</name>
            <title>Should throw exception</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
            <failure>
                <message>Error: expect(received).toBe(expected) // Object.is equality
                
                Expected: "invalidInput"
                Received: undefined</message>
                <stack-trace>Error: expect(received).toBe(expected) // Object.is equality
                
                Expected: "invalidInput"
                Received: undefined
                    at Object.&lt;anonymous> (/Users/yonigoldberg/Solutions/testing-workshop/clean-testing/src/test/transfer-service-test-start.js:70:23)
                    at Object.asyncJestTest (/Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:100:37)
                    at /Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/queueRunner.js:43:12
                    at new Promise (&lt;anonymous>)
                    at mapper (/Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/queueRunner.js:26:19)
                    at /Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/queueRunner.js:73:41
                    at processTicksAndRejections (internal/process/task_queues.js:93:5)</stack-trace>
            </failure>
        </test-case>
        <test-case start='1584808033982' status='passed' stop='1584808033985'>
            <name>When user is deleted, should not approve the transfer</name>
            <title>When user is deleted, should not approve the transfer</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
        <test-case start='1584808033985' status='passed' stop='1584808033988'>
            <name>When user has no credit, should not approve the transfer</name>
            <title>When user has no credit, should not approve the transfer</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
        <test-case start='1584808033988' status='passed' stop='1584808033991'>
            <name>When receiver lives in forbidden country, should not approve the transfer</name>
            <title>When receiver lives in forbidden country, should not approve the transfer</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
        <test-case start='1584808033991' status='failed' stop='1584808033995'>
            <name>When no sender specified, should throw invalid details error</name>
            <title>When no sender specified, should throw invalid details error</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
            <failure>
                <message>Error: expect(received).toBe(expected) // Object.is equality
                
                Expected: false
                Received: true</message>
                <stack-trace>Error: expect(received).toBe(expected) // Object.is equality
                
                Expected: false
                Received: true
                    at Object.&lt;anonymous> (/Users/yonigoldberg/Solutions/testing-workshop/clean-testing/src/test/transfer-service-test-start.js:90:18)
                    at Object.asyncJestTest (/Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:100:37)
                    at /Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/queueRunner.js:43:12
                    at new Promise (&lt;anonymous>)
                    at mapper (/Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/queueRunner.js:26:19)
                    at /Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/queueRunner.js:73:41
                    at processTicksAndRejections (internal/process/task_queues.js:93:5)</stack-trace>
            </failure>
        </test-case>
        <test-case start='1584808033995' status='failed' stop='1584808033999'>
            <name>When no receiver specified, should throw invalid details error</name>
            <title>When no receiver specified, should throw invalid details error</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
            <failure>
                <message>Error: expect(received).toBe(expected) // Object.is equality
                
                Expected: false
                Received: true</message>
                <stack-trace>Error: expect(received).toBe(expected) // Object.is equality
                
                Expected: false
                Received: true
                    at Object.&lt;anonymous> (/Users/yonigoldberg/Solutions/testing-workshop/clean-testing/src/test/transfer-service-test-start.js:95:18)
                    at Object.asyncJestTest (/Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:100:37)
                    at /Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/queueRunner.js:43:12
                    at new Promise (&lt;anonymous>)
                    at mapper (/Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/queueRunner.js:26:19)
                    at /Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/queueRunner.js:73:41
                    at processTicksAndRejections (internal/process/task_queues.js:93:5)</stack-trace>
            </failure>
        </test-case>
        <test-case start='1584808033999' status='passed' stop='1584808034002'>
            <name>When no bank specified, should throw invalid details error</name>
            <title>When no bank specified, should throw invalid details error</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
        <test-case start='1584808034002' status='passed' stop='1584808034005'>
            <name>When user did not confirm his account, should not approve the transfer</name>
            <title>When user did not confirm his account, should not approve the transfer</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
        <test-case start='1584808034005' status='passed' stop='1584808034010'>
            <name>When user has enough credit, should approve the transfer</name>
            <title>When user has enough credit, should approve the transfer</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
        <test-case start='1584808034010' status='passed' stop='1584808034014'>
            <name>When transfer is successful, should send mail to receiver</name>
            <title>When transfer is successful, should send mail to receiver</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
        <test-case start='1584808034014' status='passed' stop='1584808034017'>
            <name>When transfer is successful, receiver balance should get topped up</name>
            <title>When transfer is successful, receiver balance should get topped up</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
        <test-case start='1584808034017' status='failed' stop='1584808034021'>
            <name>When no amount specified, should throw invalid details error</name>
            <title>When no amount specified, should throw invalid details error</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
            <failure>
                <message>Error: expect(received).toBe(expected) // Object.is equality
                
                Expected: false
                Received: true</message>
                <stack-trace>Error: expect(received).toBe(expected) // Object.is equality
                
                Expected: false
                Received: true
                    at Object.&lt;anonymous> (/Users/yonigoldberg/Solutions/testing-workshop/clean-testing/src/test/transfer-service-test-start.js:126:18)
                    at Object.asyncJestTest (/Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:100:37)
                    at /Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/queueRunner.js:43:12
                    at new Promise (&lt;anonymous>)
                    at mapper (/Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/queueRunner.js:26:19)
                    at /Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/queueRunner.js:73:41
                    at processTicksAndRejections (internal/process/task_queues.js:93:5)</stack-trace>
            </failure>
        </test-case>
        <test-case start='1584808034021' status='passed' stop='1584808034024'>
            <name>When transfer is with different currency, receiver gets using his own currency</name>
            <title>When transfer is with different currency, receiver gets using his own currency</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
        <test-case start='1584808034024' status='passed' stop='1584808034028'>
            <name>When sender from Italy sends a valid payment, transfer is approved</name>
            <title>When sender from Italy sends a valid payment, transfer is approved</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
        <test-case start='1584808034028' status='passed' stop='1584808034031'>
            <name>When sender from India sends a valid payment, transfer is approved</name>
            <title>When sender from India sends a valid payment, transfer is approved</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
        <test-case start='1584808034031' status='passed' stop='1584808034034'>
            <name>When sender from US sends a valid payment, transfer is approved</name>
            <title>When sender from US sends a valid payment, transfer is approved</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
        <test-case start='1584808034034' status='passed' stop='1584808034037'>
            <name>When sender from Germany sends a valid payment, transfer is approved</name>
            <title>When sender from Germany sends a valid payment, transfer is approved</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
        <test-case start='1584808034038' status='passed' stop='1584808034041'>
            <name>When sender from Argentina sends a valid payment, transfer is approved</name>
            <title>When sender from Argentina sends a valid payment, transfer is approved</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
        <test-case start='1584808034041' status='pending' stop='1584808034041'>
            <name>When trying to exceed credit, transfer doesnt appear in user history</name>
            <title>When trying to exceed credit, transfer doesnt appear in user history</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
            <failure>
                <message>Temporarily disabled with xit</message>
                <stack-trace>undefined</stack-trace>
            </failure>
        </test-case>
    </test-cases>
</ns2:test-suite>