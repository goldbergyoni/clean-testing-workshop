<?xml version='1.0'?>
<ns2:test-suite xmlns:ns2='urn:model.allure.qatools.yandex.ru' start='1584443438521' stop='1584443438698'>
    <name>Transfer Service</name>
    <title>Transfer Service</title>
    <test-cases>
        <test-case start='1584443438522' status='passed' stop='1584443438536'>
            <name>Should fail</name>
            <title>Should fail</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
        <test-case start='1584443438536' status='passed' stop='1584443438541'>
            <name>Should throw exception</name>
            <title>Should throw exception</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
        <test-case start='1584443438542' status='passed' stop='1584443438545'>
            <name>When user is deleted, should not approve the transfer</name>
            <title>When user is deleted, should not approve the transfer</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
        <test-case start='1584443438545' status='passed' stop='1584443438548'>
            <name>When user has no credit, should not approve the transfer</name>
            <title>When user has no credit, should not approve the transfer</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
        <test-case start='1584443438548' status='passed' stop='1584443438551'>
            <name>When receiver lives in forbidden country, should not approve the transfer</name>
            <title>When receiver lives in forbidden country, should not approve the transfer</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
        <test-case start='1584443438551' status='failed' stop='1584443438556'>
            <name>When no sender specified, should throw invalid details error</name>
            <title>When no sender specified, should throw invalid details error</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
            <failure>
                <message>Error: expect(received).toBe(expected) // Object.is equality
                
                Expected: false
                Received: true</message>
                <stack-trace>Error: expect(received).toBe(expected) // Object.is equality
                
                Expected: false
                Received: true
                    at Object.&lt;anonymous> (/Users/yonigoldberg/Solutions/testing-workshop/clean-testing/src/test/transfer-service-test-start.js:81:18)
                    at Object.asyncJestTest (/Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:100:37)
                    at /Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/queueRunner.js:43:12
                    at new Promise (&lt;anonymous>)
                    at mapper (/Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/queueRunner.js:26:19)
                    at /Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/queueRunner.js:73:41
                    at processTicksAndRejections (internal/process/task_queues.js:93:5)</stack-trace>
            </failure>
        </test-case>
        <test-case start='1584443438556' status='failed' stop='1584443438560'>
            <name>When no receiver specified, should throw invalid details error</name>
            <title>When no receiver specified, should throw invalid details error</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
            <failure>
                <message>Error: expect(received).toBe(expected) // Object.is equality
                
                Expected: false
                Received: true</message>
                <stack-trace>Error: expect(received).toBe(expected) // Object.is equality
                
                Expected: false
                Received: true
                    at Object.&lt;anonymous> (/Users/yonigoldberg/Solutions/testing-workshop/clean-testing/src/test/transfer-service-test-start.js:86:18)
                    at Object.asyncJestTest (/Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:100:37)
                    at /Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/queueRunner.js:43:12
                    at new Promise (&lt;anonymous>)
                    at mapper (/Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/queueRunner.js:26:19)
                    at /Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/queueRunner.js:73:41
                    at processTicksAndRejections (internal/process/task_queues.js:93:5)</stack-trace>
            </failure>
        </test-case>
        <test-case start='1584443438560' status='passed' stop='1584443438563'>
            <name>When no bank specified, should throw invalid details error</name>
            <title>When no bank specified, should throw invalid details error</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
        <test-case start='1584443438564' status='passed' stop='1584443438568'>
            <name>When user did not confirm his account, should not approve the transfer</name>
            <title>When user did not confirm his account, should not approve the transfer</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
        <test-case start='1584443438568' status='passed' stop='1584443438572'>
            <name>When user has enough credit, should approve the transfer</name>
            <title>When user has enough credit, should approve the transfer</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
        <test-case start='1584443438572' status='passed' stop='1584443438575'>
            <name>When transfer is successful, should send mail to receiver</name>
            <title>When transfer is successful, should send mail to receiver</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
        <test-case start='1584443438575' status='passed' stop='1584443438586'>
            <name>When transfer is successful, receiver balance should get topped up</name>
            <title>When transfer is successful, receiver balance should get topped up</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
        <test-case start='1584443438586' status='failed' stop='1584443438605'>
            <name>When no amount specified, should throw invalid details error</name>
            <title>When no amount specified, should throw invalid details error</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
            <failure>
                <message>Error: expect(received).toBe(expected) // Object.is equality
                
                Expected: false
                Received: true</message>
                <stack-trace>Error: expect(received).toBe(expected) // Object.is equality
                
                Expected: false
                Received: true
                    at Object.&lt;anonymous> (/Users/yonigoldberg/Solutions/testing-workshop/clean-testing/src/test/transfer-service-test-start.js:117:18)
                    at Object.asyncJestTest (/Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:100:37)
                    at /Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/queueRunner.js:43:12
                    at new Promise (&lt;anonymous>)
                    at mapper (/Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/queueRunner.js:26:19)
                    at /Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/queueRunner.js:73:41
                    at processTicksAndRejections (internal/process/task_queues.js:93:5)</stack-trace>
            </failure>
        </test-case>
        <test-case start='1584443438605' status='passed' stop='1584443438615'>
            <name>When sender is from NaN and transfer is valid, then should be approved</name>
            <title>When sender is from NaN and transfer is valid, then should be approved</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
        <test-case start='1584443438615' status='passed' stop='1584443438618'>
            <name>When sender is from NaN and transfer is valid, then should be approved</name>
            <title>When sender is from NaN and transfer is valid, then should be approved</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
        <test-case start='1584443438618' status='passed' stop='1584443438621'>
            <name>When sender is from NaN and transfer is valid, then should be approved</name>
            <title>When sender is from NaN and transfer is valid, then should be approved</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
        <test-case start='1584443438621' status='passed' stop='1584443438624'>
            <name>When sender is from NaN and transfer is valid, then should be approved</name>
            <title>When sender is from NaN and transfer is valid, then should be approved</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
        <test-case start='1584443438624' status='passed' stop='1584443438631'>
            <name>When sender is from NaN and transfer is valid, then should be approved</name>
            <title>When sender is from NaN and transfer is valid, then should be approved</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
        <test-case start='1584443438631' status='passed' stop='1584443438634'>
            <name>When sender is from NaN and transfer is valid, then should be approved</name>
            <title>When sender is from NaN and transfer is valid, then should be approved</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
        <test-case start='1584443438634' status='passed' stop='1584443438637'>
            <name>When transfer is with different currency, receiver gets using his own currency</name>
            <title>When transfer is with different currency, receiver gets using his own currency</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
        <test-case start='1584443438637' status='passed' stop='1584443438671'>
            <name>When sender from Italy sends a valid payment, transfer is approved</name>
            <title>When sender from Italy sends a valid payment, transfer is approved</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
        <test-case start='1584443438671' status='passed' stop='1584443438675'>
            <name>When sender from India sends a valid payment, transfer is approved</name>
            <title>When sender from India sends a valid payment, transfer is approved</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
        <test-case start='1584443438675' status='passed' stop='1584443438683'>
            <name>When sender from US sends a valid payment, transfer is approved</name>
            <title>When sender from US sends a valid payment, transfer is approved</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
        <test-case start='1584443438683' status='passed' stop='1584443438686'>
            <name>When sender from Germany sends a valid payment, transfer is approved</name>
            <title>When sender from Germany sends a valid payment, transfer is approved</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
        <test-case start='1584443438686' status='passed' stop='1584443438697'>
            <name>When sender from Argentina sends a valid payment, transfer is approved</name>
            <title>When sender from Argentina sends a valid payment, transfer is approved</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
        <test-case start='1584443438697' status='pending' stop='1584443438697'>
            <name>When trying to exceed credit, transfer doesnt appear in user history</name>
            <title>When trying to exceed credit, transfer doesnt appear in user history</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
            <failure>
                <message>Temporarily disabled with xit</message>
                <stack-trace>undefined</stack-trace>
            </failure>
        </test-case>
    </test-cases>
</ns2:test-suite>